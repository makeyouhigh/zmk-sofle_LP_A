#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    WIN_APP_NUMTG: WIN_APP_NUMTG {
        compatible = "zmk,behavior-tap-dance";
        label = "WIN_APP_NUMTG";
        #binding-cells = <0>;
        bindings = <&mt LEFT_WIN K_CONTEXT_MENU>, <&tog 0>, <&tog 2>, <&tog 0>;

        tapping-term-ms = <300>;
    };

    TO_ALPHA: TO_ALPHA {
        compatible = "zmk,behavior-tap-dance";
        label = "TO_ALPHA";
        #binding-cells = <0>;
        bindings = <&none>, <&to 1>;
    };

    HOME_ROW: HOME_ROW {
        compatible = "zmk,behavior-hold-tap";
        label = "HOME_ROW";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        LSYSL {
            bindings = <&tog 7>;
            key-positions = <57 18>;
        };

        RSYSL {
            bindings = <&tog 7>;
            key-positions = <59 20>;
        };

        HANGUL_1 {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <31 33>;
        };

        HANGUL_2 {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <30 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHA {
            bindings = <
&gresc      &kp N1                &kp N2                &kp N3             &kp N4                  &kp N5       &kp UP_ARROW     &kp N6       &kp N7                  &kp N8             &kp N9                &kp N0                   &kp BACKSPACE
&lt 1 TAB   &kp Q                 &kp W                 &kp E              &kp R                   &kp T        &kp DOWN_ARROW   &kp Y        &kp U                   &kp I              &kp O                 &kp P                    &mt BACKSLASH DELETE
&kp LCTRL   &HOME_ROW LEFT_GUI A  &HOME_ROW LEFT_ALT S  &HOME_ROW LCTRL D  &HOME_ROW LEFT_SHIFT F  &kp G        &kp LEFT_ARROW   &kp H        &HOME_ROW LEFT_SHIFT J  &HOME_ROW LCTRL K  &HOME_ROW LEFT_ALT L  &HOME_ROW LEFT_GUI SEMI  &kp ENTER
&kp LSHFT   &kp Z                 &kp X                 &kp C              &kp V                   &kp B        &kp RIGHT_ARROW  &kp N        &kp M                   &kp COMMA          &kp DOT               &kp FSLH                 &kp RSHIFT
&kp C_MUTE  &mt LCTRL CAPSLOCK    &kp LEFT_ALT          &lt 1 ESCAPE       &lt 2 SPACE             &lt 3 TAB    &kp ENTER        &lt 4 ENTER  &lt 5 SPACE             &lt 6 DEL          &kp RIGHT_ALT         &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "ALPHA";
            label = "ALPHA";
        };

        ARROW_R {
            bindings = <
&kp TILDE  &kp F1   &kp F2  &kp F3  &kp F4  &kp F5    &trans  &kp F6         &kp F7       &kp F8      &kp F9         &kp F10         &trans
&trans     &kp F12  &trans  &trans  &trans  &trans    &trans  &kp HOME       &kp PAGE_UP  &kp UP      &kp PAGE_DOWN  &kp MINUS       &kp EQUAL
&trans     &none    &trans  &trans  &trans  &trans    &trans  &kp END        &kp LEFT     &kp DOWN    &kp RIGHT      &kp APOSTROPHE  &trans
&trans     &trans   &trans  &trans  &trans  &trans    &trans  &kp LC(LA(V))  &kp LC(V)    &kp LC(C)   &kp LC(X)      &kp LC(Z)       &kp LC(Y)
&trans     &trans   &trans  &trans  &trans  &trans    &trans  &trans         &trans       &kp DELETE  &trans         &trans
            >;

            display-name = "ARROW_R";
            sensor-bindings = <&scroll_encoder>;
            label = "ARROW_R";
        };

        NUMPAD_R {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &none            &none            &none            &none            &none                 &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp EQUAL        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &none            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK       &kp KP_DIVIDE
&trans  &none   &none   &none   &none   &trans    &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS           &kp KP_MINUS
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp ENTER        &kp COMMA        &kp PERIOD       &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "NUMPAD_R";
        };

        MOUSE_R {
            label = "MOUSE_R";
            display-name = "MOUSE_R";
            bindings = <
&kp TILDE  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans          &trans          &trans           &trans     &trans
&trans     &trans  &trans  &trans  &trans  &trans    &trans  &msc SCRL_LEFT   &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans     &trans
&trans     &none   &trans  &trans  &trans  &trans    &trans  &msc SCRL_RIGHT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans     &trans
&trans     &trans  &trans  &trans  &trans  &trans    &trans  &kp LC(LA(V))    &kp LC(V)       &kp LC(C)       &kp LC(C)        &kp LC(Z)  &kp LC(Y)
&trans     &trans  &trans  &trans  &trans  &trans    &trans  &mkp LCLK        &mkp MCLK       &mkp RCLK       &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        SYM {
            bindings = <
&trans  &trans             &trans           &trans        &trans                &trans                   &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TILDE          &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACKET   &kp DOLLAR       &kp PERCENT   &kp CARET             &kp EQUAL                &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp NON_US_BACKSLASH     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans             &trans           &trans        &trans                &trans                   &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "SYM";
        };

        FUN {
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "FUN";
        };

        ARROW_L {
            bindings = <
&kp TILDE  &kp F1     &kp F2         &kp F3        &kp F4       &kp F5           &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans     &kp F12    &kp PAGE_DOWN  &kp UP_ARROW  &kp PAGE_UP  &kp HOME         &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans     &trans     &kp LEFT       &kp DOWN      &kp RIGHT    &kp END          &trans  &trans  &trans  &trans  &trans  &trans   &trans
&kp LC(Y)  &kp LC(Z)  &kp LC(X)      &kp LC(C)     &kp LC(V)    &kp LC(LA(V))    &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans     &trans     &trans         &kp DELETE    &trans       &trans           &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "ARROW_L";
        };

        SYSTEM {
            bindings = <
&none            &none            &none            &none            &none            &none              &none  &none      &none       &none        &none  &none  &none
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &none  &none      &none       &none        &none  &none  &none
&rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF    &none  &none      &none       &none        &none  &none  &none
&rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR    &none  &none      &none       &none        &none  &none  &none
&none            &none            &to 0            &bootloader      &sys_reset       &soft_off          &none  &soft_off  &sys_reset  &bootloader  &to 0  &none
            >;

            label = "SYSTEM";
        };
    };
};
